version: '3.1'

networks:
  network-1:
    driver: bridge

services:
  zookeeper:
    container_name: zookeeper
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - network-1
  kafka:
    container_name: kafka  
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9092:9092"
      - '9093:9093'
    depends_on:
      - zookeeper
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INSIDE://:9092,OUTSIDE://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INSIDE://kafka:9092,OUTSIDE://34.101.224.66:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INSIDE
    networks:
      - network-1

  init-kafka:
    container_name: init-kafka
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9093 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists --topic my-topic-1 --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:9093 --create --if-not-exists --topic my-topic-2 --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9093 --list
      "
    networks:
      - network-1      

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
